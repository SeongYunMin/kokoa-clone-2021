Git은 파일의 수정사항들을 계속 추적하는 프로그램이다
Git은 파일들을 주시하면서 관리해주는 도구이고
GitHub는 git의 변경 내역을 볼 수 있는 사이트이다
둘은 다른거다
깃허브에 들어가보면 Repository(저장소) 가 있다
우리의 코드가 살고 있는것
코드의 변경내역과 히스토리를 갖고 있는 폴더가 Repository이다
개발을 많이 하게 되면 Repository안에는 Commit으로 꽉 차게 될것이다
 Commit 은 기본적으로 "이제 이 파일의 버전을 저장하고 싶어" 하는 시점이다
 Repository를 만들 때에는 Public 하게 만들도록 하자 그래야 다른 사람들의
 도움을 받을 수 있다
 Repository 만든 후 깃허브 데스크탑을 사용하여 불러올 수 있다
 이를 쉽게 찾을 수 있는 위치에 저장해 놓고 vscode에서 열어보자
 
 vsc에 Repository 불러온 후 가장 먼저 해야 할 일은 README.md 파일을
 만들어야 하는 것이다. README 파일은 모든 Git Repository가 가지고 있어야 하는
 파일이다
 이걸 만들고 이 파일 안에 # Kokoa Clone 2021 이라고 치고 저장하면
 git desktop에 추가됐다는 초록색 +표시와 함께 내가 리드미 파일에 적은
 내용이 뜨게 된다
 그리고 이 리드미 파일이 마음에 들어서 publish(게시) 하고 싶다면
 깃허브 데스크탑 왼쪽 아래에 있는 칸에 commit title을 정해주고
 commit to main을 눌러준다
 그리고 publish branch를 누르면 깃허브에 내 커밋이 게시된다
 이 커밋을 수정하고 싶으면 에디터에서 수정하고 저장하면 된다
 그리고 깃허브 데스크탑 들어가보면 수정된 것이 보일것이다
 그리고 다시 커밋 누르면(깃허브 데스크탑은 똑똑해서 title을 update README.md
 라고 알아서 정해놨다) 수정된 파일이 커밋된다.
 근데 이렇게 커밋 된것은 local 하게 커밋 된것이다
 즉 내 컴퓨터의 git이 README.md파일이 업데이트된것을 알게 된것이다
 하지만 github는 이사실을 아직 알지 못한다
 github도 내가 파일을 수정한 것을 알 수 있도록 해야한다
 그래서 commit을 누른 후엔 Push origin 을 눌러 github에 게시를 해야한다
 그러면 github에 커밋이 2개가 됐음을 확인할 수 있다

 그래서 앞으로는 코드를 작성하고 그것을 ctrl+s로 저장하고 그 코드를 git desktop에
 서 체크하고 커밋의 이름을 붙인후 로컬한 git에다가 commit 하고 다시 그걸 
 github에 push 할 것이다